#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>
#include "keymap_estonian.h"


// #define EE_CARN GRAVE  // ˇ (dead)
// #define EE_1    N1    // 1
// #define EE_2    N2    // 2
// #define EE_3    N3    // 3
// #define EE_4    N4    // 4
// #define EE_5    N5    // 5
// #define EE_6    N6    // 6
// #define EE_7    N7    // 7
// #define EE_8    N8    // 8
// #define EE_9    N9    // 9
// #define EE_0    N0    // 0
// #define EE_PLUS KC_MINS // +
// #define EE_ACUT KC_EQL  // ´ (dead)
// #define EE_UDIA LEFT_BRACKET // Ü
// #define EE_OTIL RBRC // Õ
// #define EE_ODIA SCLN // Ö
// #define EE_ADIA QUOT // Ä
// #define EE_QUOT NUHS // '
// #define EE_LABK NUBS // <
// #define EE_COMM KC_COMM // ,
// #define EE_DOT  KC_DOT  // .
// #define EE_MINS SLASH // -
// #define EE_TILD LS(EE_CARN) // ~ (dead)
// #define EE_EXLM LS(EE_1)    // !
// #define EE_DQUO LS(EE_2)    // "
// #define EE_HASH LS(EE_3)    // #
// #define EE_CURR LS(EE_4)    // ¤
// #define EE_PERC LS(EE_5)    // %
// #define EE_AMPR LS(EE_6)    // &
// #define EE_SLSH LS(EE_7)    // /
// #define EE_LPRN LS(EE_8)    // (
// #define EE_RPRN LS(EE_9)    // )
// #define EE_EQL  LS(EE_0)    // =
// #define EE_QUES LS(EE_PLUS) // ?
// #define EE_GRV  LS(EE_ACUT) // ` (dead)
// #define EE_ASTR LS(EE_QUOT) // *
// #define EE_RABK LS(EE_LABK) // >
// #define EE_SCLN LS(EE_COMM) // ;
// #define EE_COLN LS(EE_DOT)  // :
// #define EE_UNDS LS(EE_MINS) // _
// #define EE_AT   RA(EE_2)    // @
// #define EE_PND  RA(EE_3)    // £
// #define EE_DLR  RA(EE_4)    // $
// #define EE_EURO RA(EE_5)    // €
// #define EE_LCBR RA(EE_7)    // {
// #define EE_LBRC RA(EE_8)    // [
// #define EE_RBRC RA(EE_9)    // ]
// #define EE_RCBR RA(EE_0)    // }
// #define EE_BSLS RA(EE_PLUS) // (backslash)
// #define EE_SECT RA(EE_OTIL) // §
// #define EE_SCAR RA(EE_S)    // š
// #define EE_CIRC RA(EE_ADIA) // ^ (dead)
// #define EE_HALF RA(EE_QUOT) // ½
// #define EE_PIPE RA(EE_LABK) // |
// #define EE_ZCAR RA(EE_Z)    // ž


/ {
    behaviors {
      #include "macros.dtsi"

      hm: homerow_mods {
          compatible = "zmk,behavior-hold-tap";
          label = "HOMEROW_MODS";
          #binding-cells = <2>;
          tapping-term-ms = <200>;
          quick_tap_ms = <175>;
          flavor = "tap-preferred";
          bindings = <&kp>, <&kp>;
      };

    /* Mod morph behavior definitions */
    s_1_exc: shift_1_exc_behavior {
        compatible = "zmk,behavior-mod-morph";
        label = "S_1_EXC";
        #binding-cells = <0>;
        bindings = <&kp N1>, <&kp EE_EXLM>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
        keep-mods = <(MOD_LSFT|MOD_RSFT)>;

    };

    s_2_at: shift_2_at_behavior {
        compatible = "zmk,behavior-mod-morph";
        label = "S_2_AT";
            #binding-cells = <0>;

        bindings = <&kp N2>, <&kp EE_AT>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
        keep-mods = <(MOD_LSFT|MOD_RSFT)>;

    };

    s_3_hash: shift_3_hash_behavior {
        compatible = "zmk,behavior-mod-morph";
        label = "S_3_HASH";
            #binding-cells = <0>;

        bindings = <&kp N3>, <&kp EE_HASH>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
                keep-mods = <(MOD_LSFT|MOD_RSFT)>;

    };

    s_4_dollar: shift_4_dollar_behavior {
        compatible = "zmk,behavior-mod-morph";
        label = "S_4_DOLLAR";
            #binding-cells = <0>;

        bindings = <&kp N4>, <&kp EE_DLR>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
          keep-mods = <(MOD_LSFT|MOD_RSFT)>;

    };

    s_5_percent: shift_5_percent_behavior {
        compatible = "zmk,behavior-mod-morph";
        label = "S_5_PERCENT";
            #binding-cells = <0>;

        bindings = <&kp N5>, <&kp EE_PERC>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
                keep-mods = <(MOD_LSFT|MOD_RSFT)>;

    };

    s_6_caret: shift_6_caret_behavior {
        compatible = "zmk,behavior-mod-morph";
        label = "S_6_CARET";
            #binding-cells = <0>;

        bindings = <&kp N6>, <&kp EE_CIRC>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
                keep-mods = <(MOD_LSFT|MOD_RSFT)>;

    };

    s_7_ampersand: shift_7_ampersand_behavior {
        compatible = "zmk,behavior-mod-morph";
        label = "S_7_AMPERSAND";
            #binding-cells = <0>;

        bindings = <&kp N7>, <&kp EE_AMPR>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
                keep-mods = <(MOD_LSFT|MOD_RSFT)>;

    };

    s_8_asterisk: shift_8_asterisk_behavior {
        compatible = "zmk,behavior-mod-morph";
        label = "S_8_ASTERISK";
            #binding-cells = <0>;

        bindings = <&kp N8>, <&kp EE_ASTR>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
                keep-mods = <(MOD_LSFT|MOD_RSFT)>;

    };

    s_9_lparen: shift_9_lparen_behavior {
        compatible = "zmk,behavior-mod-morph";
        label = "S_9_LPAREN";
            #binding-cells = <0>;

        bindings = <&kp N9>, <&kp EE_LPRN>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
                keep-mods = <(MOD_LSFT|MOD_RSFT)>;

    };

    s_0_rparen: shift_0_rparen_behavior {
        compatible = "zmk,behavior-mod-morph";
        label = "S_0_RPAREN";
            #binding-cells = <0>;

        bindings = <&kp N0>, <&kp EE_RPRN>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
                keep-mods = <(MOD_LSFT|MOD_RSFT)>;

    };

    dq_sq: double_quote_single_quote {
        compatible = "zmk,behavior-mod-morph";
        label = "DQSQ";
            #binding-cells = <0>;

        bindings = <&kp EE_DQUO>, <&kp EE_QUOT>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
        keep-mods = <(MOD_LSFT|MOD_RSFT)>;

    };

    };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <       
        &none &s_1_exc &s_2_at &s_3_hash &s_4_dollar &s_5_percent                           &tog 1 &mo 3                                                                               &s_6_caret &s_7_ampersand &s_8_asterisk &s_9_lparen &s_0_rparen &kp EE_MINS
        &none     &kp Q       &kp W         &kp E          &hm LGUI R             &kp T  &none                                                                     &none &kp Y        &hm LGUI U          &kp I              &kp O         &kp P         &kp EE_UDIA
        &kp ESC   &hm LGUI A  &hm LALT S    &hm LCTRL D    &hm LSHIFT F      &kp G  &none             &kp LCTRL &kp LALT &none &none &kp LGUI  &kp RCTRL           &none &kp H        &hm RSHIFT J   &hm RCTRL K        &hm RALT L    &hm LGUI  EE_ODIA &kp EE_ADIA
        &kp LSHFT &kp Z       &kp X         &kp C          &kp V             &kp B           &none    &none     &kp HOME &none &none &kp PG_UP &none     &none           &kp N        &kp M          &kp COMMA          &kp DOT       &kp FSLH      &kp RSHFT
        &mo 2     &kp GRAVE   &kp CAPS      &kp LEFT       &kp RIGHT                         &kp BSPC &kp  TAB  &kp END              &kp PG_DN &kp ENTER &kp SPACE                    &kp UP         &kp DOWN           &kp LBKT      &kp RBKT      &mo 2
      >;
    };
    keypad {
      bindings = <
        &kp EE_1 &kp N1    &kp N2   &kp N3   &kp N4     &kp N5 &trans                                                                       &mo 3 &kp N6 &kp KP_NUM &kp KP_EQUAL &kp KP_DIVIDE &kp KP_MULTIPLY &kp MINUS
        &kp TAB   &kp Q     &kp W    &kp E    &kp R      &kp T  &none                                                                        &none &kp Y  &kp KP_N7  &kp KP_N8    &kp KP_N9     &kp KP_MINUS    &kp BSLH
        &kp ESC   &kp A     &kp S    &kp D    &kp F      &kp G  &none           &kp LCTRL &kp LALT &none &none &kp LGUI  &kp RCTRL           &none &kp H  &kp KP_N4  &kp KP_N5    &kp KP_N6     &kp KP_PLUS     &kp SQT
        &kp LSHFT &kp Z     &kp X    &kp C    &kp V      &kp B         &none    &none     &kp HOME &none &none &kp PG_UP &none     &none           &kp N  &kp KP_N1  &kp KP_N2    &kp KP_N3     &kp KP_ENTER    &kp RSHFT
        &mo 2     &kp GRAVE &kp CAPS &kp LEFT &kp RIGHT                &kp BSPC &kp DEL   &kp END              &kp PG_DN &kp ENTER &kp KP_N0              &kp UP     &kp DOWN     &kp KP_DOT    &kp RBKT        &mo 2
      >;
    };
    fn {
      bindings = <
        &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &tog 1                                                       &mo 3 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12
        &trans &trans &trans &trans &trans &trans  &none                                                       &none &trans &trans &trans &trans  &trans  &trans
        &trans &trans &trans &trans &trans &trans  &none        &trans &trans &none &none &trans &trans        &none &trans &trans &trans &trans  &trans  &trans
        &trans &trans &trans &trans &trans &trans        &none  &none  &trans &none &none &trans &none  &none        &trans &trans &trans &trans  &trans  &trans
        &trans &trans &trans &trans &trans               &trans &trans &trans             &trans &trans &trans              &trans &trans &trans  &trans  &trans
      >;
    };
    mod {
      bindings = <
        &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none                                                                                                          &trans                 &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none
        &none &none        &none        &none        &none        &none        &bootloader                                                                                                    &bootloader            &none        &none        &none        &none        &none        &none
        &none &none        &none        &none        &none        &none        &rgb_ug RGB_MEFS_CMD 5                 &bt BT_CLR &bt BT_CLR &none &none &bt BT_CLR &bt BT_CLR                 &rgb_ug RGB_MEFS_CMD 5 &none        &none        &none        &none        &none        &none
        &none &none        &none        &none        &none        &none                               &none           &none      &none      &none &none &none      &none      &none                                  &none        &none        &none        &none        &none        &none
        &none &none        &none        &bl BL_INC   &bl BL_DEC                                       &rgb_ug RGB_TOG &bl BL_TOG &none                  &none      &bl BL_TOG &rgb_ug RGB_TOG                                     &bl BL_INC   &bl BL_DEC   &none        &none        &none
      >;
    };
  };
};
